/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import commons.*;
import java.awt.Color;

/**
 *
 * @author Gunea-Lasagno-Prisecaru
 */
public class ClientGUI extends javax.swing.JFrame {

    /**
     * Creates new form ClientGUI1
     */
    public ClientGUI() {
        initComponents();
        
        refreshQuizzes();
        
        TabbedPane.setEnabledAt(2, false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addQuizAnswers = new javax.swing.ButtonGroup();
        quizAnswers = new javax.swing.ButtonGroup();
        TabbedPane = new javax.swing.JTabbedPane();
        home = new javax.swing.JPanel();
        refreshButton = new javax.swing.JButton();
        quizListContainer = new javax.swing.JScrollPane();
        quizList = new javax.swing.JList<>();
        takeQuizButton = new javax.swing.JButton();
        takeQuizErrorLabel = new javax.swing.JLabel();
        addQuizTab = new javax.swing.JPanel();
        instructionsLabel = new javax.swing.JLabel();
        questionLabel = new javax.swing.JLabel();
        questionText = new javax.swing.JTextField();
        authorLabel = new javax.swing.JLabel();
        authorText = new javax.swing.JTextField();
        answersLabel = new javax.swing.JLabel();
        answerButton1 = new javax.swing.JRadioButton();
        answerText1 = new javax.swing.JTextField();
        answerButton2 = new javax.swing.JRadioButton();
        answerText2 = new javax.swing.JTextField();
        answerButton3 = new javax.swing.JRadioButton();
        answerText3 = new javax.swing.JTextField();
        answerButton4 = new javax.swing.JRadioButton();
        answerText4 = new javax.swing.JTextField();
        submitButton = new javax.swing.JButton();
        submitErrorLabel = new javax.swing.JLabel();
        quizTab = new javax.swing.JPanel();
        quizLabel = new javax.swing.JLabel();
        quizQuestion = new javax.swing.JLabel();
        quizAuthor = new javax.swing.JLabel();
        quizAnswerButton1 = new javax.swing.JRadioButton();
        quizAnswerLabel1 = new javax.swing.JLabel();
        quizAnswerButton2 = new javax.swing.JRadioButton();
        quizAnswerLabel2 = new javax.swing.JLabel();
        quizAnswerButton3 = new javax.swing.JRadioButton();
        quizAnswerLabel3 = new javax.swing.JLabel();
        quizAnswerLabel4 = new javax.swing.JLabel();
        quizAnswerButton4 = new javax.swing.JRadioButton();
        quizConfirm = new javax.swing.JButton();
        correctLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quiz Share");
        setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        setLocationByPlatform(true);
        setMaximumSize(new java.awt.Dimension(442, 325));
        setMinimumSize(new java.awt.Dimension(415, 400));
        setResizable(false);

        TabbedPane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        home.setBackground(new java.awt.Color(255, 255, 255));

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        quizListContainer.setBorder(null);

        quizList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Theres no quiz available", "Try to refresh" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        quizList.setEnabled(false);
        quizListContainer.setViewportView(quizList);

        takeQuizButton.setText("Take quiz!");
        takeQuizButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                takeQuizButtonActionPerformed(evt);
            }
        });

        takeQuizErrorLabel.setForeground(new java.awt.Color(255, 0, 0));
        takeQuizErrorLabel.setToolTipText("");

        javax.swing.GroupLayout homeLayout = new javax.swing.GroupLayout(home);
        home.setLayout(homeLayout);
        homeLayout.setHorizontalGroup(
            homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(quizListContainer)
                    .addGroup(homeLayout.createSequentialGroup()
                        .addComponent(takeQuizButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(takeQuizErrorLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 271, Short.MAX_VALUE)
                        .addComponent(refreshButton)))
                .addContainerGap())
        );
        homeLayout.setVerticalGroup(
            homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(refreshButton)
                    .addComponent(takeQuizButton)
                    .addComponent(takeQuizErrorLabel))
                .addGap(12, 12, 12)
                .addComponent(quizListContainer, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                .addContainerGap())
        );

        TabbedPane.addTab("Home", home);

        addQuizTab.setBackground(new java.awt.Color(255, 255, 255));

        instructionsLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        instructionsLabel.setText("Write down your Quiz");

        questionLabel.setText("Question :");

        questionText.setToolTipText("Write your question here");

        authorLabel.setText("Author :");

        authorText.setToolTipText("Write your question here");

        answersLabel.setText("Answers :");

        answerButton1.setBackground(new java.awt.Color(255, 255, 255));
        addQuizAnswers.add(answerButton1);
        answerButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answerButton1ActionPerformed(evt);
            }
        });

        answerText1.setToolTipText("");

        answerButton2.setBackground(new java.awt.Color(255, 255, 255));
        addQuizAnswers.add(answerButton2);
        answerButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answerButton2ActionPerformed(evt);
            }
        });

        answerButton3.setBackground(new java.awt.Color(255, 255, 255));
        addQuizAnswers.add(answerButton3);
        answerButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answerButton3ActionPerformed(evt);
            }
        });

        answerButton4.setBackground(new java.awt.Color(255, 255, 255));
        addQuizAnswers.add(answerButton4);
        answerButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answerButton4ActionPerformed(evt);
            }
        });

        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        submitErrorLabel.setForeground(new java.awt.Color(255, 0, 0));
        submitErrorLabel.setToolTipText("");

        javax.swing.GroupLayout addQuizTabLayout = new javax.swing.GroupLayout(addQuizTab);
        addQuizTab.setLayout(addQuizTabLayout);
        addQuizTabLayout.setHorizontalGroup(
            addQuizTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addQuizTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addQuizTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addQuizTabLayout.createSequentialGroup()
                        .addComponent(questionLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(questionText, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addQuizTabLayout.createSequentialGroup()
                        .addComponent(submitButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(submitErrorLabel))
                    .addGroup(addQuizTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addQuizTabLayout.createSequentialGroup()
                            .addComponent(authorLabel)
                            .addGap(14, 14, 14)
                            .addComponent(authorText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(instructionsLabel, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addQuizTabLayout.createSequentialGroup()
                            .addComponent(answerButton2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(answerText2))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addQuizTabLayout.createSequentialGroup()
                            .addComponent(answerButton1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(answerText1))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addQuizTabLayout.createSequentialGroup()
                            .addComponent(answerButton3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(answerText3))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addQuizTabLayout.createSequentialGroup()
                            .addComponent(answerButton4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(answerText4)))
                    .addComponent(answersLabel))
                .addContainerGap(83, Short.MAX_VALUE))
        );
        addQuizTabLayout.setVerticalGroup(
            addQuizTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addQuizTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(instructionsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addQuizTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(questionText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(questionLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addQuizTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(authorText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(authorLabel))
                .addGap(18, 18, 18)
                .addComponent(answersLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addQuizTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(answerButton1)
                    .addComponent(answerText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addQuizTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(answerButton2)
                    .addComponent(answerText2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addQuizTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(answerButton3)
                    .addComponent(answerText3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addQuizTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(answerButton4)
                    .addComponent(answerText4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addQuizTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitButton)
                    .addComponent(submitErrorLabel))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        TabbedPane.addTab("Add Quiz!", addQuizTab);

        quizTab.setBackground(new java.awt.Color(255, 255, 255));

        quizLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        quizLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        quizLabel.setText("Answer to the quiz");

        quizQuestion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        quizQuestion.setText("(domanda) ");

        quizAuthor.setForeground(new java.awt.Color(102, 102, 102));
        quizAuthor.setText("Made by ");

        quizAnswerButton1.setBackground(new java.awt.Color(255, 255, 255));
        quizAnswers.add(quizAnswerButton1);
        quizAnswerButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quizAnswerButton1ActionPerformed(evt);
            }
        });

        quizAnswerButton2.setBackground(new java.awt.Color(255, 255, 255));
        quizAnswers.add(quizAnswerButton2);
        quizAnswerButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quizAnswerButton2ActionPerformed(evt);
            }
        });

        quizAnswerButton3.setBackground(new java.awt.Color(255, 255, 255));
        quizAnswers.add(quizAnswerButton3);
        quizAnswerButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quizAnswerButton3ActionPerformed(evt);
            }
        });

        quizAnswerButton4.setBackground(new java.awt.Color(255, 255, 255));
        quizAnswers.add(quizAnswerButton4);
        quizAnswerButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quizAnswerButton4ActionPerformed(evt);
            }
        });

        quizConfirm.setText("Confirm");
        quizConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quizConfirmActionPerformed(evt);
            }
        });

        correctLabel.setText("Risposta corretta!");

        javax.swing.GroupLayout quizTabLayout = new javax.swing.GroupLayout(quizTab);
        quizTab.setLayout(quizTabLayout);
        quizTabLayout.setHorizontalGroup(
            quizTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(quizLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(quizQuestion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(quizTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(quizTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(quizTabLayout.createSequentialGroup()
                        .addGroup(quizTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(quizTabLayout.createSequentialGroup()
                                .addComponent(quizConfirm)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(correctLabel)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(quizTabLayout.createSequentialGroup()
                                .addComponent(quizAnswerButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(quizAnswerLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(quizTabLayout.createSequentialGroup()
                                .addComponent(quizAnswerButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(quizAnswerLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(quizTabLayout.createSequentialGroup()
                                .addComponent(quizAnswerButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(quizAnswerLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(quizTabLayout.createSequentialGroup()
                                .addComponent(quizAnswerButton4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(quizAnswerLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(quizTabLayout.createSequentialGroup()
                        .addComponent(quizAuthor)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        quizTabLayout.setVerticalGroup(
            quizTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(quizTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(quizLabel)
                .addGap(27, 27, 27)
                .addComponent(quizQuestion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(quizTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(quizAnswerLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(quizAnswerButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(quizTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(quizAnswerLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(quizAnswerButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(quizTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(quizAnswerLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(quizAnswerButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(quizTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(quizAnswerLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(quizAnswerButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(quizTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quizConfirm)
                    .addComponent(correctLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(quizAuthor)
                .addGap(77, 77, 77))
        );

        correctLabel.setText("");

        TabbedPane.addTab("Do Quiz!", quizTab);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TabbedPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TabbedPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        refreshQuizzes();
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void takeQuizButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_takeQuizButtonActionPerformed
        int selectedQuiz = quizList.getSelectedIndex();

        //Caricamento del quiz scelto
        if (selectedQuiz < 0) {
            takeQuizErrorLabel.setText("Select a quiz first");
        } else {
            //Abilitazione della scheda dei quiz
            
            
            takeQuizErrorLabel.setText("");
            
            //Caricamento del quiz sulla GUI
            TabbedPane.setEnabledAt(2, true);
            TabbedPane.setSelectedIndex(2);
            quizAnswerButton1.setEnabled(true);
            quizAnswerLabel1.setText(quizzes[selectedQuiz].getAnswers()[0]);
            quizAnswerButton2.setEnabled(true);
            quizAnswerLabel2.setText(quizzes[selectedQuiz].getAnswers()[1]);
            quizAnswerButton3.setEnabled(true);
            quizAnswerLabel3.setText(quizzes[selectedQuiz].getAnswers()[2]);
            quizAnswerButton4.setEnabled(true);
            quizAnswerLabel4.setText(quizzes[selectedQuiz].getAnswers()[3]);
            quizAuthor.setText("Made By " + quizzes[selectedQuiz].getAuthor());
            quizQuestion.setText(quizzes[selectedQuiz].getQuestion());
            quizConfirm.setEnabled(true);
            correctLabel.setText("");
        }
    }//GEN-LAST:event_takeQuizButtonActionPerformed

    
    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        //Controllo della validità del quiz
        if (
            !questionText.getText().equals("") &&
            !authorText.getText().equals("") &&
            !answerText1.getText().equals("") &&
            !answerText2.getText().equals("") &&
            !answerText3.getText().equals("") && 
            !answerText4.getText().equals("") &&
            addQuizCorrectAnswer != 0
        ) {
            
            //Creazione dell'array di risposte
            String[] answers = {
                answerText1.getText(),
                answerText2.getText(),
                answerText3.getText(),
                answerText4.getText()
            };
            //Creazione del nuovo quiz
            Quiz quiz = new Quiz(
                questionText.getText(),
                authorText.getText(),
                answers,
                addQuizCorrectAnswer
            );

            //Secondo controllo di validatà del quiz
            if (quiz.equals(lastSubmittedQuiz)) {
                submitErrorLabel.setText("You have already submitted this quiz");
                return;
            }

            //Invio al server del quiz
            new ClientSocketManager().run(new Message("postQuiz", quiz));
            
            //Aggiornamento della lista dei quiz
            refreshQuizzes();

            //Preparazione per il prossimo invio
            lastSubmittedQuiz = quiz;
            submitErrorLabel.setText("");
            questionText.setText("");
            answerText1.setText("");
            answerText2.setText("");
            answerText3.setText("");
            answerText4.setText("");
            
        } else {
            submitErrorLabel.setText("All the text fields must be filled");
        }
    }//GEN-LAST:event_submitButtonActionPerformed
    
    private void answerButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answerButton4ActionPerformed
        addQuizCorrectAnswer = 4;
    }//GEN-LAST:event_answerButton4ActionPerformed

    private void answerButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answerButton3ActionPerformed
        addQuizCorrectAnswer = 3;
    }//GEN-LAST:event_answerButton3ActionPerformed

    private void answerButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answerButton2ActionPerformed
        addQuizCorrectAnswer = 2;
    }//GEN-LAST:event_answerButton2ActionPerformed

    private void answerButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answerButton1ActionPerformed
        addQuizCorrectAnswer = 1;
    }//GEN-LAST:event_answerButton1ActionPerformed

    
    private void quizAnswerButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quizAnswerButton1ActionPerformed
        currentSelectedAnswer = 1;
    }//GEN-LAST:event_quizAnswerButton1ActionPerformed

    private void quizConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quizConfirmActionPerformed
        int currentSelectedQuiz = quizList.getSelectedIndex();
        
        //Controllo della risposta
        if (currentSelectedAnswer != 0) {
            if (quizzes[currentSelectedQuiz].getCorrectAnswer() == currentSelectedAnswer) {
                correctLabel.setText("Risposta Corretta!");
                correctLabel.setForeground(Color.green);
                quizAnswerButton1.setEnabled(false);
                quizAnswerButton2.setEnabled(false);
                quizAnswerButton3.setEnabled(false);
                quizAnswerButton4.setEnabled(false);
                quizConfirm.setEnabled(false);
            } else {
                correctLabel.setText("Risposta Errata!");
                correctLabel.setForeground(Color.red);
            }
        }
    }//GEN-LAST:event_quizConfirmActionPerformed

    private void quizAnswerButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quizAnswerButton2ActionPerformed
        currentSelectedAnswer = 2;
    }//GEN-LAST:event_quizAnswerButton2ActionPerformed

    private void quizAnswerButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quizAnswerButton3ActionPerformed
        currentSelectedAnswer = 3;
    }//GEN-LAST:event_quizAnswerButton3ActionPerformed

    private void quizAnswerButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quizAnswerButton4ActionPerformed
        currentSelectedAnswer = 4;
    }//GEN-LAST:event_quizAnswerButton4ActionPerformed

    /**
     * Aggiorna la lista dei quiz
     */
    private void refreshQuizzes() {
        System.out.println("client: refreshing quiz list");

        //Richiesta al server della lista dei quiz
        ClientSocketManager socket = new ClientSocketManager();
        quizzes = (Quiz[]) socket.run(new Message()).content;

        //Creaziona di un array di stringhe per la rappresentazione grafica dei quiz
        final String[] quizzesStrings;

        if (quizzes.length > 0) {
            quizzesStrings = new String[quizzes.length];
            quizList.setEnabled(true);

            for (int i = 0; i < quizzes.length; i++) {
                quizzesStrings[i] = (i + 1) + " - " + quizzes[i].getQuestion();
            }
        } else {
            quizList.setEnabled(false);
            quizzesStrings = new String[2];
            quizzesStrings[0] = "There's no quiz available";
            quizzesStrings[1] = "Try to refresh later";
        }

        //Aggiornamento della lista dei quiz
        quizList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = quizzesStrings.clone();

            public int getSize() {
                return strings.length;
            }

            public String getElementAt(int i) {
                return strings[i];
            }
        });
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Imposta il look and feel di sistema */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
            /*
             for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
             if ("Windows".equals(info.getName())) {
             javax.swing.UIManager.setLookAndFeel(info.getClassName());
             break;
             }
             }
             */
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Crea e mostra la finestra */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientGUI().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane TabbedPane;
    private javax.swing.ButtonGroup addQuizAnswers;
    private javax.swing.JPanel addQuizTab;
    private javax.swing.JRadioButton answerButton1;
    private javax.swing.JRadioButton answerButton2;
    private javax.swing.JRadioButton answerButton3;
    private javax.swing.JRadioButton answerButton4;
    private javax.swing.JTextField answerText1;
    private javax.swing.JTextField answerText2;
    private javax.swing.JTextField answerText3;
    private javax.swing.JTextField answerText4;
    private javax.swing.JLabel answersLabel;
    private javax.swing.JLabel authorLabel;
    private javax.swing.JTextField authorText;
    private javax.swing.JLabel correctLabel;
    private javax.swing.JPanel home;
    private javax.swing.JLabel instructionsLabel;
    private javax.swing.JLabel questionLabel;
    private javax.swing.JTextField questionText;
    private javax.swing.JRadioButton quizAnswerButton1;
    private javax.swing.JRadioButton quizAnswerButton2;
    private javax.swing.JRadioButton quizAnswerButton3;
    private javax.swing.JRadioButton quizAnswerButton4;
    private javax.swing.JLabel quizAnswerLabel1;
    private javax.swing.JLabel quizAnswerLabel2;
    private javax.swing.JLabel quizAnswerLabel3;
    private javax.swing.JLabel quizAnswerLabel4;
    private javax.swing.ButtonGroup quizAnswers;
    private javax.swing.JLabel quizAuthor;
    private javax.swing.JButton quizConfirm;
    private javax.swing.JLabel quizLabel;
    private javax.swing.JList<String> quizList;
    private javax.swing.JScrollPane quizListContainer;
    private javax.swing.JLabel quizQuestion;
    private javax.swing.JPanel quizTab;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton submitButton;
    private javax.swing.JLabel submitErrorLabel;
    private javax.swing.JButton takeQuizButton;
    private javax.swing.JLabel takeQuizErrorLabel;
    // End of variables declaration//GEN-END:variables

    //Attributi extra
    private Quiz[] quizzes;

    private Quiz lastSubmittedQuiz;

    private int addQuizCorrectAnswer = 0;
    private int currentSelectedAnswer = 0;

}
